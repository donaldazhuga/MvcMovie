trigger:
- master  # Pipeline triggers on changes to the master branch

pool:
  name: 'AgentDonalda'  # Your custom agent pool name

variables:
  solution: 'MvcMovie.sln'  # Solution file for your ASP.NET Core project
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
# Install NuGet
- task: NuGetToolInstaller@1
  displayName: 'Install NuGet'

# Install .NET SDK
- task: UseDotNet@2
  displayName: 'Install .NET 8 SDK'
  inputs:
    packageType: 'sdk'
    version: '8.x'

# Clean build directories (optional but useful)
- script: |
    echo "Cleaning obj and bin directories..."
    if exist "$(Build.SourcesDirectory)\MvcMovie\obj" rd /s /q "$(Build.SourcesDirectory)\MvcMovie\obj"
    if exist "$(Build.SourcesDirectory)\MvcMovie\bin" rd /s /q "$(Build.SourcesDirectory)\MvcMovie\bin"
  displayName: "Clean Build Directories"
  continueOnError: true

# Restore NuGet Packages
- task: NuGetCommand@2
  displayName: 'Restore NuGet Packages'
  inputs:
    command: 'restore'
    restoreSolution: '$(solution)'
    feedsToUse: 'select'

# Build the Solution
- task: VSBuild@1
  displayName: 'Build Solution'
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/t:Restore;Build /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# Run Tests (if applicable)
- task: VSTest@2
  displayName: 'Run Tests'
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# Publish Build Artifacts (key step for creating deployable artifact)
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts'
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'  # Path to publish build output
    artifactName: 'drop'  # Name of the artifact
    publishLocation: 'Container'